#!/bin/sh
#
# -*- Mode: sh; coding: utf-8; indent-tabs-mode: nil; tab-width: 2 -*-
# vim:set expandtab tabstop=2 fenc=utf-8 fileformat=unix filetype=sh:
#
# Removes docker images by their names

set -e

REPOSITORY="${1:-<none>}"

usage() {
  fgWhite="\033[0;37m"
  clrReset="\033[m"

  echo "
${fgWhite}OVERVIEW${clrReset}

        ${fgWhite}docker_rmi \"<Insert repository here>\"${clrReset}

${fgWhite}DESCRIPTION${clrReset}

        Removes all orphaned containers (repository column = \"<none>\") off the
        images stack.

        You can specify a repository name as the only argument to this helper
        script.

        The name gets prependend with a regular expression \"start of line\"
        meta character:

        ~\$ ${fgWhite}docker_rmi \"nginx\"${clrReset}

        Will result in removing all images with this values in their
        \"Repository\" column:

        - nginx/nginx
        - nginx:latest
        - nginx-mysql/foo
        - ...

${fgWhite}ARGUMENTS${clrReset}

        Repository name as string.

"
}

while [ $# -gt 0 ]
do
  case "$1" in
    -* | --help | -h)
      usage
      exit 1;;
    *) break;;
  esac
done

echo "==> Removing docker images..."
docker images -a | grep "^${REPOSITORY}" | awk '{print $3}' | xargs docker rmi

