maven_verify_multi_module(1) -- Focused test execution of specific modules in a Maven multi-module project.
====

## SYNOPSIS

`maven_verify_multi_module` [`-c`|`--compile-or-install` <arg>]
                            [`-s`|`--(no-)dependencies-skip-tests`]
                            [`-h`|`--help`] <target-module(s)>

## DESCRIPTION

Running tests on a (complex) Maven multi-module project for a **specifc**
target module can be time consuming. This script helps to 'compile' or
'install' the dependencies for that target module and runs the test of
that target module afterwards.

This helper requires either a local Maven wrapper (mvnw) or a globally 
installed Maven executable.

## OPTIONS

  * `-c`, `--compile-or-install`:
    Whether to 'compile' only or 'install' the dependencies.
    (defaults to 'compile')

  * `-s`, `--dependencies-skip-tests`, `--no-dependencies-skip-tests`:
    Whether to skip tests on dependencies build phase or not.
    (defaults to 'false')

  * `-h`, `--help`
    Prints help"

  * <target-module(s)>:
    The target module(s) for which the tests should be run for.
    Comma-separated if multiple modules should be targeted.

## EXAMPLES

If the multi module project you're working on makes it necessary to
install the dependencies, use the [`-c`|`--compile-or-install`] 
argument with the value set to 'install':

    $ maven_verify_multi_module -c install my-module-name

If you don't want to run the tests of the dependencies of the target
module, use the [`-s`|`--(no-)dependencies-skip-tests`] flag:

    $ maven_verify_multi_module -s my-module-name

If you want to run the helper for multiple target modules, use a 
comma-separated list of module names:

    $ maven_verify_multi_module mod1,mod2

## COPYRIGHT

maven_verify_multi_module is (C) 2021 Thomas Juhnke https://dreadlabs.de, License: MIT

## SEE ALSO

mvn(1)
